----------------- change log -----------------
V0.3
 Change ParserInterface so end is removed.
 Change so parseres not is interlize every time.
 Allow _ invariabels name.
 Add ^ to math section 2^3 = 8 
 Create function as name = function(){}; or test(function(){});
 Create class as name = class{}, test(class(){});, test = new class{} or test(new class{});
 Append new tokens break and continue. Break stop current task and continue break the running task and jump to next if there are any
 Append a new parser unset. When do this "i=0;unset i;" you remove i. You cant never remove function and class.
 Append a new plugin random with a static class where method next and hash. 
 Append lock, isLock and unlock method to array. When call lock the array will raise error when the array is attempt to change and so on.
 Append throw catch so you can throw errors.
 Append string->format(string skapalon, array data); there work as sprintf in PHP
 Append hasKey and hasValue method to array and start last support cyclus for Array plugin. 
 Append return type for function and method. look like this function string toString(){}. when do this the callable is lock to return the specific type. 
 Append plugin "parser" there create a function "version" there tell the version of parser.
 Append 'is' control if object is from the specifc class
 Append 'instanceof' control of the object is from the class
 Append extends. Extrens anthor class.
 Throw a error when a non defult agument is after a defult value "A agument there has not a defult value can not be after a agument there has a defult value" in methods and function.
 Create a new token "func" as short cut for "function".
 Optimize how ArrayVariabel works and standardized how it work so wee in V0.4 can create object in the script there can work as array.

V0.2 
 Create a file system where the script can parse other file and get class and function.
 Optimie Interprenter
 Append Posision to function and method call
 If the object or class has a method call toString() the name can be use as string variabel.
 optimizes the class parser
 Remove StringVariabel and write a static method there create a object of the class String. 
 Remove CallAgumentStack and use CVar[].
 Move the work of put variabels in function call to the event there is call when a function us called. 
 Create a Static method to parse a call of method, function or init a new object.
 Create a ScriptStartEvent there collect all object there want to be call before a master script is called.
 Create a ScriptEndEvent there collect all object there want to be call after hole script is called.
 Create a ScriptTaskEvent there collect all object there can tell the Energy if the task is done. If not the Energy object will wait to call ScriptEndEvent.
 Change Class methods builder soo you can use Agugment with out first append AgumentStack object.
 Change Function builder so the caller use event and not now where it take a object.
 Change error system so it not throw it but save the error in the system and when called stop execution.
 Extends the Energy class so you can dispose the object so the script can handle ScriptTaskEvent and ScriptEndEvent.
 Change the ArrayVariabel so you can put context without key. The method put will automatically get a key and set the context to it.
 Create ForParser so you can use for(int=0;i<10;i++)
 Array will be change to object so you can use []->length();
 Append a ScriptConfig so you can use config. Script can change config, but you can disable it or disbale change on single config.
 Append new plugin to get details of functions and method.
 Append method 'toLower()' and 'toUpper()' to string. toLower() will change HEY to hey and toUpper will change hey to HEY.
 
 --V0.1 is testet to time: 60547,4869ms in test case
 
